    //***************** retenir les coordonnées du joueur *****************//
    
    /*
    create()
    {
        var direction = 'right';
    }

    
    update()
    {
        if (cursors.left.isDown) {
            player.direction = 'left';
            player.setVelocityX(-160);
            player.anims.play('left', true);
        }
        else if (cursors.right.isDown) {
            player.direction = 'right';
            player.setVelocityX(160);
            player.anims.play('right', true);
        }
    }    
    */




        var dummy = this.add.image(900, 400, 'light').setVisible(false);

        var light1 = this.lights.addLight(280, 400, 200);
        var ellipse1 = new Phaser.Geom.Ellipse(light1.x, light1.y, 70, 100);
    
        var light2 = this.lights.addLight(650, 386, 200);
        var ellipse2 = new Phaser.Geom.Ellipse(light2.x, light2.y, 30, 40);
    
        var light3 = this.lights.addLight(900, 400, 200);

        this.time.addEvent({
            delay: 100,
            callback: function ()
            {
                Phaser.Geom.Ellipse.Random(ellipse1, light1);
                Phaser.Geom.Ellipse.Random(ellipse2, light2);
            },
            callbackScope: this,
            repeat: -1
        });

        this.tweens.add({
            targets: [ light3, dummy ],
            y: 150,
            ease: 'Sine.easeInOut',
            yoyo: true,
            repeat: -1,
            duration: 3000
        });

        // We must enable the light system. By default is disabled
        this.lights.enable();


        /*************** Move monstres en focntion du joueur ******************/

            /**
     * Quand on dépasse un monstre
     * il se tourne vers nous
     * @param {Player} player
     * @param {Phaser.Physics.Arcade.Sprite} monster
     *//*
    monsterMove(player, monster)
    {
        let me = this;
        me.player.body.velocity.x = player.VelocityX;
        me.monster.body.velocity.x = monster.VelocityX;

        //if (player.x < monster.x && monster.setVelocityX == player.setVelocityX)        
        if (player.x < monster.x && player.VelocityX > 0)
        {
            if(monster.VelocityX <= 0)
            {
                monster.flipX = false;
            }
            else
            {
                monster.flipX = true;
                monster.setVelocityX = - monster.VelocityX;//-100;
            }
        } 
        else if (player.x < monster.x && player.VelocityX < 0)
        {
            if(monster.VelocityX < 0)
            {
                monster.flipX = false;
            }
            else
            {
                monster.flipX = true;
                monster.setVelocityX = - monster.VelocityX;//-100;
            }
        }
        else if (player.x > monster.x && player.VelocityX > 0)
        {
            if(monster.VelocityX > 0)
            {
                monster.flipX = false;
            }
            else
            {
                monster.flipX = true;
                monster.setVelocityX = - monster.VelocityX;//-100;
            }
        }
        else if (player.x > monster.x && player.VelocityX < 0)
        {
            if(monster.VelocityX > 0)
            {
                monster.flipX = false;
            }
            else
            {
                monster.flipX = true;
                monster.setVelocityX = - monster.VelocityX;//-100;
            }
        }
        else
        {
            monster.flipX = false;
        }                    
    }*/